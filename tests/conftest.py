import pandas as pd
import pytest


@pytest.fixture
def mock_api_response() -> dict:
    """Фикстура для подмены ответа API"""
    return {"rates": {"USD": 0.01030, "EUR": 0.00952}}


@pytest.fixture
def trans_data() -> dict:
    return {
        "Дата операции": ["01.01.2023 00:00:00", "01.02.2023 00:00:00"],
        "Дата платежа": ["01.01.2023 00:00:00", "01.02.2023 00:00:00"],
        "Номер карты": ["1234", "5678"],
        "Статус": ["завершен", "отменен"],
        "Сумма операции": [100.00, 150.00],
        "Валюта операции": ["RUB", "RUB"],
        "Сумма платежа": [100.00, 150.00],
        "Валюта платежа": ["RUB", "RUB"],
        "Кэшбэк": [1.00, 1.50],
        "Категория": ["продукты", "развлечения"],
        "MCC": [5411, 5813],
        "Описание": ["магазин", "кинотеатр"],
        "Бонусы (включая кэшбэк)": [10.00, 15.00],
        "Округление на инвесткопилку": [0.00, 0.00],
        "Сумма операции с округлением": [100.00, 150.00],
    }


@pytest.fixture
def sample_transactions() -> pd.DataFrame:
    """Фикстура с примером данных транзакций."""
    data = {
        "Дата операции": [
            "01.11.2024 10:15:30",
            "05.11.2024 12:45:00",
            "10.10.2024 14:00:00",
            "30.11.2024 09:30:00",
            "01.12.2024 08:20:15",
        ],
        "Сумма операции": [1000, 500, 200, 300, 400],
        "Валюта": ["RUB", "RUB", "USD", "EUR", "RUB"],
    }
    return pd.DataFrame(data)


@pytest.fixture
def expected_result() -> dict:
    return {
        "greeting": "Доброй ночи",
        "cards": [
            {"last_digits": "4556", "total_spent": 198770.3, "cashback": 1987.0},
            {"last_digits": "5091", "total_spent": -12743.99, "cashback": 128.0},
            {"last_digits": "7197", "total_spent": -23959.86, "cashback": 240.0},
        ],
        "top_transactions": [
            {
                "Дата операции": "30.12.2021 17:50:17",
                "Сумма операции": 174000.0,
                "Категория": "Пополнения",
                "Описание": "Пополнение через Газпромбанк",
            },
            {
                "Дата операции": "22.12.2021 23:30:45",
                "Сумма операции": 28001.94,
                "Категория": "Переводы",
                "Описание": "Перевод Кредитная карта. ТП 10.2 RUR",
            },
            {
                "Дата операции": "23.12.2021 16:45:12",
                "Сумма операции": 20000.0,
                "Категория": "Другое",
                "Описание": "Иван С.",
            },
            {
                "Дата операции": "30.12.2021 17:50:30",
                "Сумма операции": 5046.0,
                "Категория": "Пополнения",
                "Описание": "Пополнение через Газпромбанк",
            },
            {
                "Дата операции": "05.12.2021 15:20:00",
                "Сумма операции": 3500.0,
                "Категория": "Пополнения",
                "Описание": "Внесение наличных через банкомат Тинькофф",
            },
        ],
        "currency_rates": [{"currency": "USD", "rate": 73.21}, {"currency": "EUR", "rate": 87.08}],
        "stock_prices": [
            {"stock": "AAPL", "price": 224.23},
            {"stock": "MSFT", "price": 418.01},
            {"stock": "GOOGL", "price": 180.35},
            {"stock": "AMZN", "price": 206.84},
            {"stock": "TSLA", "price": 350},
        ],
    }


@pytest.fixture
def transaction_investment_bank() -> list:
    return [
        {
            "Дата операции": "03.01.2018 15:03:35",
            "Дата платежа": "04.01.2018",
            "Номер карты": "*7197",
            "Статус": "OK",
            "Сумма операции": -73.06,
            "Валюта операции": "RUB",
            "Сумма платежа": -73.06,
            "Валюта платежа": "RUB",
            "Кэшбэк": 1.2,
            "Категория": "Супермаркеты",
            "MCC": 5499.0,
            "Описание": "Magazin 25",
            "Бонусы (включая кэшбэк)": 1,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 73.06,
        },
        {
            "Дата операции": "03.01.2018 14:55:21",
            "Дата платежа": "05.01.2018",
            "Номер карты": "*7197",
            "Статус": "OK",
            "Сумма операции": -21.0,
            "Валюта операции": "RUB",
            "Сумма платежа": -21.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": 1.2,
            "Категория": "Красота",
            "MCC": 5977.0,
            "Описание": "OOO Balid",
            "Бонусы (включая кэшбэк)": 0,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 21.0,
        },
        {
            "Дата операции": "01.01.2018 20:27:51",
            "Дата платежа": "04.01.2018",
            "Номер карты": "*7197",
            "Статус": "OK",
            "Сумма операции": -316.0,
            "Валюта операции": "RUB",
            "Сумма платежа": -316.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": 1.2,
            "Категория": "Красота",
            "MCC": 5977.0,
            "Описание": "OOO Balid",
            "Бонусы (включая кэшбэк)": 6,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 316.0,
        },
        {
            "Дата операции": "01.01.2018 12:49:53",
            "Дата платежа": "01.01.2018",
            "Номер карты": "*7197",
            "Статус": "OK",
            "Сумма операции": -3000.0,
            "Валюта операции": "RUB",
            "Сумма платежа": -3000.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": 1.2,
            "Категория": "Переводы",
            "MCC": 59.77,
            "Описание": "Линзомат ТЦ Юность",
            "Бонусы (включая кэшбэк)": 0,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 3000.0,
        },
    ]


@pytest.fixture
def sample_transactions_to_decorator() -> pd.DataFrame:
    data = [
        {"Дата операции": "01.11.2024 10:15:30", "Сумма операции": 1000, "Валюта": "RUB", "Категория": "Супермаркеты"},
        {"Дата операции": "10.10.2024 14:00:00", "Сумма операции": 200, "Валюта": "USD", "Категория": "Супермаркеты"},
        {"Дата операции": "30.11.2024 09:30:00", "Сумма операции": 300, "Валюта": "EUR", "Категория": "Супермаркеты"},
        {"Дата операции": "05.08.2024 08:20:15", "Сумма операции": 400, "Валюта": "RUB", "Категория": "Развлечения"},
    ]
    return pd.DataFrame(data)
